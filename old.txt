// Decompiled with: CFR 0.152
// Class Version: 8
package net.ccbluex.liquidbounce.features.module.modules.player;

import java.awt.Color;
import java.util.Locale;
import kotlin.Metadata;
import kotlin.jvm.functions.Function0;
import kotlin.jvm.internal.Intrinsics;
import kotlin.math.MathKt;
import kotlin.ranges.RangesKt;
import kotlin.text.StringsKt;
import net.ccbluex.liquidbounce.CrossSine;
import net.ccbluex.liquidbounce.event.EventState;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.JumpEvent;
import net.ccbluex.liquidbounce.event.MotionEvent;
import net.ccbluex.liquidbounce.event.MoveEvent;
import net.ccbluex.liquidbounce.event.PacketEvent;
import net.ccbluex.liquidbounce.event.Render2DEvent;
import net.ccbluex.liquidbounce.event.Render3DEvent;
import net.ccbluex.liquidbounce.event.UpdateEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.features.module.modules.movement.Speed;
import net.ccbluex.liquidbounce.features.value.BoolValue;
import net.ccbluex.liquidbounce.features.value.FloatValue;
import net.ccbluex.liquidbounce.features.value.IntegerValue;
import net.ccbluex.liquidbounce.features.value.ListValue;
import net.ccbluex.liquidbounce.features.value.Value;
import net.ccbluex.liquidbounce.injection.access.StaticStorage;
import net.ccbluex.liquidbounce.ui.font.Fonts;
import net.ccbluex.liquidbounce.utils.InventoryUtils;
import net.ccbluex.liquidbounce.utils.MinecraftInstance;
import net.ccbluex.liquidbounce.utils.MovementUtils;
import net.ccbluex.liquidbounce.utils.PlaceRotation;
import net.ccbluex.liquidbounce.utils.Rotation;
import net.ccbluex.liquidbounce.utils.RotationUtils;
import net.ccbluex.liquidbounce.utils.block.BlockUtils;
import net.ccbluex.liquidbounce.utils.block.PlaceInfo;
import net.ccbluex.liquidbounce.utils.extensions.EntityExtensionKt;
import net.ccbluex.liquidbounce.utils.render.RenderUtils;
import net.ccbluex.liquidbounce.utils.timer.MSTimer;
import net.ccbluex.liquidbounce.utils.timer.TimeUtils;
import net.ccbluex.liquidbounce.utils.timer.tickTimer;
import net.minecraft.block.Block;
import net.minecraft.block.BlockAir;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.client.gui.ScaledResolution;
import net.minecraft.client.multiplayer.PlayerControllerMP;
import net.minecraft.client.multiplayer.WorldClient;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.RenderHelper;
import net.minecraft.client.settings.GameSettings;
import net.minecraft.client.settings.KeyBinding;
import net.minecraft.entity.Entity;
import net.minecraft.item.Item;
import net.minecraft.item.ItemBlock;
import net.minecraft.item.ItemStack;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.network.play.client.C09PacketHeldItemChange;
import net.minecraft.network.play.client.C0APacketAnimation;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.potion.Potion;
import net.minecraft.stats.StatList;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.MathHelper;
import net.minecraft.util.MovingObjectPosition;
import net.minecraft.util.Vec3;
import net.minecraft.util.Vec3i;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.lwjgl.opengl.GL11;

@ModuleInfo(name="Scaffold", spacedName="Scaffold", category=ModuleCategory.PLAYER, keyBind=34)
public final class Scaffold
extends Module {
    @NotNull
    private final ListValue rotationsValue;
    @NotNull
    private final Value<Integer> aacYawValue;
    @NotNull
    private final Value<Integer> customYawValue;
    @NotNull
    private final Value<Float> customPitchValue;
    @NotNull
    private final Value<Integer> customtowerYawValue;
    @NotNull
    private final Value<Float> customtowerPitchValue;
    @NotNull
    private final Value<Boolean> customrotationtwo;
    @NotNull
    private final Value<Integer> customrotationtwoYaw;
    @NotNull
    private final Value<Float> customrotationtwoPitch;
    @NotNull
    private final ListValue towerModeValue;
    @NotNull
    private final BoolValue stopWhenBlockAboveValue;
    @NotNull
    private final BoolValue towerFakeJumpValue;
    @NotNull
    private final BoolValue stairsValue;
    @NotNull
    private final ListValue placeModeValue;
    @NotNull
    private final ListValue towerPlaceModeValue;
    @NotNull
    private final ListValue autoBlockValue;
    @NotNull
    private final Value<String> highBlock;
    @NotNull
    private final ListValue sprintModeValue;
    @NotNull
    private final BoolValue swingValue;
    @NotNull
    private final BoolValue searchValue;
    @NotNull
    private final BoolValue downValue;
    @NotNull
    private final BoolValue autojumpValue;
    @NotNull
    private final BoolValue jumpYValue;
    @NotNull
    private final BoolValue safeWalkValue;
    @NotNull
    private final BoolValue zitterModeValue;
    @NotNull
    private final Value<Boolean> silentRotationValue;
    @NotNull
    private final IntegerValue minRotationSpeedValue;
    @NotNull
    private final IntegerValue maxRotationSpeedValue;
    @NotNull
    private final IntegerValue maxDelayValue;
    @NotNull
    private final IntegerValue minDelayValue;
    @NotNull
    private final IntegerValue expandLengthValue;
    @NotNull
    private final FloatValue timerValue;
    @NotNull
    private final FloatValue towerTimerValue;
    @NotNull
    private final FloatValue XZModifierValue;
    @NotNull
    private final ListValue towerActiveValue;
    @NotNull
    private final ListValue eagleValue;
    @NotNull
    private final Value<Integer> blocksToEagleValue;
    @NotNull
    private final Value<Float> edgeDistanceValue;
    @NotNull
    private final ListValue sameYValue;
    @NotNull
    private final ListValue hitableCheckValue;
    @NotNull
    private final Value<Float> jumpMotionValue;
    @NotNull
    private final Value<Integer> jumpDelayValue;
    @NotNull
    private final Value<Float> stableMotionValue;
    @NotNull
    private final Value<Float> plusMotionValue;
    @NotNull
    private final Value<Float> plusMaxMotionValue;
    @NotNull
    private final Value<Float> constantMotionValue;
    @NotNull
    private final Value<Float> constantMotionJumpGroundValue;
    @NotNull
    private final Value<Float> teleportHeightValue;
    @NotNull
    private final Value<Integer> teleportDelayValue;
    @NotNull
    private final Value<Boolean> teleportGroundValue;
    @NotNull
    private final Value<Boolean> teleportNoMotionValue;
    @NotNull
    private final ListValue counterDisplayValue;
    @NotNull
    private final BoolValue markValue;
    @NotNull
    private final Value<Integer> MarkRedValue;
    @NotNull
    private final Value<Integer> MarkGreenValue;
    @NotNull
    private final Value<Integer> MarkBlueValue;
    @NotNull
    private final Value<Integer> MarkAlphaValue;
    @NotNull
    private final BoolValue nobobValue;
    private float progress;
    private long lastMS;
    @Nullable
    private PlaceInfo targetPlace;
    private int lastGroundY;
    @Nullable
    private Rotation lockRotation;
    private int slot;
    private boolean zitterDirection;
    private int previousPerspective;
    private boolean perspectiveToggled;
    private float yaw;
    private float pitch;
    @NotNull
    private final MSTimer delayTimer;
    @NotNull
    private final MSTimer zitterTimer;
    @NotNull
    private final MSTimer clickTimer;
    @NotNull
    private final tickTimer towerTimer;
    private long delay;
    private int lastPlace;
    private int placedBlocksWithoutEagle;
    private boolean eagleSneaking;
    private boolean shouldGoDown;
    private double jumpGround;
    private boolean towerStatus;
    private boolean canSameY;
    @Nullable
    private BlockPos lastPlaceBlock;
    private boolean doSpoof;
    private int offGroundTicks;
    private int ticks;
    private final boolean ok;
    @NotNull
    private final ItemStack barrier;

    public Scaffold() {
        String[] stringArray = new String[]{"None", "Snap", "Normal", "Simple", "AAC", "Custom", "WatchDog", "Grim", "Grim2", "LGBT+"};
        this.rotationsValue = new ListValue("Rotations", stringArray, "AAC");
        this.aacYawValue = new IntegerValue("AACYawOffset", 0, 0, 90).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getRotationsValue$p(this.this$0).equals("AAC");
            }
        });
        this.customYawValue = new IntegerValue("CustomYaw", -145, -180, 180).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getRotationsValue$p(this.this$0).equals("Custom");
            }
        });
        this.customPitchValue = new FloatValue("CustomPitch", 82.4f, -90.0f, 90.0f).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getRotationsValue$p(this.this$0).equals("Custom");
            }
        });
        this.customtowerYawValue = new IntegerValue("CustomTowerYaw", -145, -180, 180).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getRotationsValue$p(this.this$0).equals("Custom");
            }
        });
        this.customtowerPitchValue = new FloatValue("CustomTowerPitch", 79.0f, -90.0f, 90.0f).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getRotationsValue$p(this.this$0).equals("Custom");
            }
        });
        this.customrotationtwo = new BoolValue("CustomRotation2", false).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getRotationsValue$p(this.this$0).equals("Custom");
            }
        });
        this.customrotationtwoYaw = new IntegerValue("RotationYaw", 0, -180, 180).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getRotationsValue$p(this.this$0).equals("Custom") && (Boolean)Scaffold.access$getCustomrotationtwo$p(this.this$0).get() != false;
            }
        });
        this.customrotationtwoPitch = new FloatValue("RotationPitch", 0.0f, -90.0f, 90.0f).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getRotationsValue$p(this.this$0).equals("Custom") && (Boolean)Scaffold.access$getCustomrotationtwo$p(this.this$0).get() != false;
            }
        });
        stringArray = new String[]{"Jump", "Motion", "NCP", "Motion2", "ConstantMotion", "PlusMotion", "StableMotion", "MotionTP", "MotionTP2", "Packet", "Teleport", "AAC3.3.9", "AAC3.6.4", "AAC4.4Constant", "AAC4Jump", "Matrix6.9.2", "Verus", "Vanilla"};
        this.towerModeValue = new ListValue("TowerMode", stringArray, "Vanilla");
        this.stopWhenBlockAboveValue = new BoolValue("StopTowerWhenBlockAbove", true);
        this.towerFakeJumpValue = new BoolValue("TowerFakeJump", true);
        this.stairsValue = new BoolValue("Stairs", false);
        stringArray = new String[]{"Pre", "Post"};
        this.placeModeValue = new ListValue("PlaceTiming", stringArray, "Pre");
        stringArray = new String[]{"Pre", "Post"};
        this.towerPlaceModeValue = new ListValue("TowerPlaceTiming", stringArray, "Pre");
        stringArray = new String[]{"Spoof", "Switch", "OFF"};
        this.autoBlockValue = new ListValue("AutoBlock", stringArray, "Switch");
        stringArray = new String[]{"AAC", "NCP"};
        this.highBlock = new ListValue("PickerMode", stringArray, "NCP").displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getAutoBlockValue$p(this.this$0).equals("Spoof");
            }
        });
        stringArray = new String[]{"Normal", "Bypass", "WatchDog", "Ground", "Air", "Legit", "Fast", "Matrix", "None"};
        this.sprintModeValue = new ListValue("Sprint", stringArray, "Normal");
        this.swingValue = new BoolValue("Swing", false);
        this.searchValue = new BoolValue("Search", true);
        this.downValue = new BoolValue("Downward", false);
        this.autojumpValue = new BoolValue("Autojump", false);
        this.jumpYValue = new BoolValue("JumpY", false);
        this.safeWalkValue = new BoolValue("SafeWalk", false);
        this.zitterModeValue = new BoolValue("Zitter", false);
        this.silentRotationValue = new BoolValue("SilentRotation", true).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return !Scaffold.access$getRotationsValue$p(this.this$0).equals("None");
            }
        });
        this.minRotationSpeedValue = (IntegerValue)new IntegerValue(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super("MinRotationSpeed", 180, 0, 180);
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)Scaffold.access$getMaxRotationSpeedValue$p(this.this$0).get()).intValue();
                if (v < newValue) {
                    this.set(v);
                }
            }
        }.displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return !Scaffold.access$getRotationsValue$p(this.this$0).equals("None");
            }
        });
        this.maxRotationSpeedValue = (IntegerValue)new IntegerValue(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super("MaxRotationSpeed", 180, 0, 180);
            }

            protected void onChanged(int oldValue, int newValue) {
                int v = ((Number)Scaffold.access$getMinRotationSpeedValue$p(this.this$0).get()).intValue();
                if (v > newValue) {
                    this.set(v);
                }
            }
        }.displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return !Scaffold.access$getRotationsValue$p(this.this$0).equals("None");
            }
        });
        this.maxDelayValue = new IntegerValue(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super("MaxDelay", 0, 0, 1000);
            }

            protected void onChanged(int oldValue, int newValue) {
                int i = ((Number)Scaffold.access$getMinDelayValue$p(this.this$0).get()).intValue();
                if (i > newValue) {
                    this.set(i);
                }
            }
        };
        this.minDelayValue = new IntegerValue(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super("MinDelay", 0, 0, 1000);
            }

            protected void onChanged(int oldValue, int newValue) {
                int i = ((Number)Scaffold.access$getMaxDelayValue$p(this.this$0).get()).intValue();
                if (i < newValue) {
                    this.set(i);
                }
            }
        };
        this.expandLengthValue = new IntegerValue("ExpandLength", 1, 1, 6);
        this.timerValue = new FloatValue("Timer", 1.0f, 0.1f, 5.0f);
        this.towerTimerValue = new FloatValue("TowerTimer", 1.0f, 0.1f, 5.0f);
        this.XZModifierValue = new FloatValue("XZModifier", 1.0f, 0.0f, 2.0f);
        stringArray = new String[]{"Always", "PressSpace", "NoMove", "OnMove", "OFF"};
        this.towerActiveValue = new ListValue("TowerActivation", stringArray, "PressSpace");
        stringArray = new String[]{"Silent", "Normal", "Off"};
        this.eagleValue = new ListValue("Eagle", stringArray, "Off");
        this.blocksToEagleValue = new IntegerValue("BlocksToEagle", 0, 0, 10).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return !Scaffold.access$getEagleValue$p(this.this$0).equals("Off");
            }
        });
        this.edgeDistanceValue = new FloatValue("EagleEdgeDistance", 0.0f, 0.0f, 0.5f).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return !Scaffold.access$getEagleValue$p(this.this$0).equals("Off");
            }
        });
        stringArray = new String[]{"Simple", "Speed", "OFF"};
        this.sameYValue = new ListValue("SameY", stringArray, "Speed");
        stringArray = new String[]{"Simple", "Strict", "OFF"};
        this.hitableCheckValue = new ListValue("HitableCheck", stringArray, "Simple");
        this.jumpMotionValue = new FloatValue("TowerJumpMotion", 0.42f, 0.3681289f, 0.79f).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getTowerModeValue$p(this.this$0).equals("Jump");
            }
        });
        this.jumpDelayValue = new IntegerValue("TowerJumpDelay", 0, 0, 20).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getTowerModeValue$p(this.this$0).equals("Jump");
            }
        });
        this.stableMotionValue = new FloatValue("TowerStableMotion", 0.42f, 0.1f, 1.0f).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getTowerModeValue$p(this.this$0).equals("StableMotion");
            }
        });
        this.plusMotionValue = new FloatValue("TowerPlusMotion", 0.1f, 0.01f, 0.2f).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getTowerModeValue$p(this.this$0).equals("PlusMotion");
            }
        });
        this.plusMaxMotionValue = new FloatValue("TowerPlusMaxMotion", 0.8f, 0.1f, 2.0f).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getTowerModeValue$p(this.this$0).equals("PlusMotion");
            }
        });
        this.constantMotionValue = new FloatValue("TowerConstantMotion", 0.42f, 0.1f, 1.0f).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getTowerModeValue$p(this.this$0).equals("ConstantMotion");
            }
        });
        this.constantMotionJumpGroundValue = new FloatValue("TowerConstantMotionJumpGround", 0.79f, 0.76f, 1.0f).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getTowerModeValue$p(this.this$0).equals("ConstantMotion");
            }
        });
        this.teleportHeightValue = new FloatValue("TowerTeleportHeight", 1.15f, 0.1f, 5.0f).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getTowerModeValue$p(this.this$0).equals("Teleport");
            }
        });
        this.teleportDelayValue = new IntegerValue("TowerTeleportDelay", 0, 0, 20).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getTowerModeValue$p(this.this$0).equals("Teleport");
            }
        });
        this.teleportGroundValue = new BoolValue("TowerTeleportGround", true).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getTowerModeValue$p(this.this$0).equals("Teleport");
            }
        });
        this.teleportNoMotionValue = new BoolValue("TowerTeleportNoMotion", false).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return Scaffold.access$getTowerModeValue$p(this.this$0).equals("Teleport");
            }
        });
        stringArray = new String[]{"OFF", "Simple", "Advanced", "Novoline", "PrePost", "Sigma", "Astolfo"};
        this.counterDisplayValue = new ListValue("Counter", stringArray, "Simple");
        this.markValue = new BoolValue("Mark", false);
        this.MarkRedValue = new IntegerValue("Mark-R", 0, 0, 255).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)Scaffold.access$getMarkValue$p(this.this$0).get();
            }
        });
        this.MarkGreenValue = new IntegerValue("Mark-G", 0, 0, 255).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)Scaffold.access$getMarkValue$p(this.this$0).get();
            }
        });
        this.MarkBlueValue = new IntegerValue("Nark-B", 0, 0, 255).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)Scaffold.access$getMarkValue$p(this.this$0).get();
            }
        });
        this.MarkAlphaValue = new IntegerValue("Mark-Alpha", 0, 0, 255).displayable(new Function0<Boolean>(this){
            final Scaffold this$0;
            {
                this.this$0 = $receiver;
                super(0);
            }

            @NotNull
            public final Boolean invoke() {
                return (Boolean)Scaffold.access$getMarkValue$p(this.this$0).get();
            }
        });
        this.nobobValue = new BoolValue("NoBOB", false);
        this.delayTimer = new MSTimer();
        this.zitterTimer = new MSTimer();
        this.clickTimer = new MSTimer();
        this.towerTimer = new tickTimer();
        this.barrier = new ItemStack(Item.func_150899_d((int)166), 0, 0);
    }

    @NotNull
    public final ListValue getSprintModeValue() {
        return this.sprintModeValue;
    }

    @NotNull
    public final ListValue getCounterDisplayValue() {
        return this.counterDisplayValue;
    }

    public final boolean getPerspectiveToggled() {
        return this.perspectiveToggled;
    }

    public final void setPerspectiveToggled(boolean bl) {
        this.perspectiveToggled = bl;
    }

    public final int getTicks() {
        return this.ticks;
    }

    public final void setTicks(int n) {
        this.ticks = n;
    }

    public final boolean getOk() {
        return this.ok;
    }

    @Override
    public void onEnable() {
        this.slot = MinecraftInstance.mc.field_71439_g.field_71071_by.field_70461_c;
        this.doSpoof = false;
        if (MinecraftInstance.mc.field_71439_g == null) {
            return;
        }
        this.lastGroundY = (int)MinecraftInstance.mc.field_71439_g.field_70163_u;
        this.lastPlace = 2;
        this.delayTimer.reset();
        this.zitterTimer.reset();
        this.clickTimer.reset();
    }

    @EventTarget
    public final void onUpdate(@NotNull UpdateEvent event) {
        String string;
        Intrinsics.checkNotNullParameter(event, "event");
        if (this.rotationsValue.equals("LGBT+")) {
            this.yaw += 50.0f;
            if (this.yaw > 180.0f) {
                this.yaw = -180.0f;
            } else if (this.yaw < -180.0f) {
                this.yaw = 180.0f;
            }
            this.pitch = 90.0f;
            RotationUtils.setTargetRotation(new Rotation(this.yaw, this.pitch));
        }
        if (this.rotationsValue.equals("WatchDog")) {
            RotationUtils.setTargetRotation(new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + 180.0f, 83.0f));
        }
        if (this.rotationsValue.equals("Simple")) {
            RotationUtils.setTargetRotation(new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + 145.0f, 82.0f));
        }
        if (this.rotationsValue.equals("Custom") && this.customrotationtwo.get().booleanValue()) {
            RotationUtils.setTargetRotation(new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + ((Number)this.customrotationtwoYaw.get()).floatValue(), ((Number)this.customrotationtwoPitch.get()).floatValue()));
        }
        if (((Boolean)this.nobobValue.get()).booleanValue()) {
            MinecraftInstance.mc.field_71439_g.field_70140_Q = 0.0f;
        }
        if (this.towerStatus) {
            String string2 = ((String)this.towerModeValue.get()).toLowerCase(Locale.ROOT);
            Intrinsics.checkNotNullExpressionValue(string2, "this as java.lang.String).toLowerCase(Locale.ROOT)");
            if (!Intrinsics.areEqual(string2, "aac3.3.9")) {
                string2 = ((String)this.towerModeValue.get()).toLowerCase(Locale.ROOT);
                Intrinsics.checkNotNullExpressionValue(string2, "this as java.lang.String).toLowerCase(Locale.ROOT)");
                if (!Intrinsics.areEqual(string2, "aac4.4constant")) {
                    string2 = ((String)this.towerModeValue.get()).toLowerCase(Locale.ROOT);
                    Intrinsics.checkNotNullExpressionValue(string2, "this as java.lang.String).toLowerCase(Locale.ROOT)");
                    if (!Intrinsics.areEqual(string2, "aac4jump")) {
                        MinecraftInstance.mc.field_71428_T.field_74278_d = ((Number)this.towerTimerValue.get()).floatValue();
                    }
                }
            }
        }
        if (!this.towerStatus) {
            MinecraftInstance.mc.field_71428_T.field_74278_d = ((Number)this.timerValue.get()).floatValue();
        }
        if (this.towerStatus || MinecraftInstance.mc.field_71439_g.field_70123_F) {
            this.canSameY = false;
            this.lastGroundY = (int)MinecraftInstance.mc.field_71439_g.field_70163_u;
        } else {
            String string3 = ((String)this.sameYValue.get()).toLowerCase(Locale.ROOT);
            Intrinsics.checkNotNullExpressionValue(string3, "this as java.lang.String).toLowerCase(Locale.ROOT)");
            string = string3;
            if (Intrinsics.areEqual(string, "simple")) {
                this.canSameY = true;
            } else if (Intrinsics.areEqual(string, "speed")) {
                Speed speed = CrossSine.INSTANCE.getModuleManager().get(Speed.class);
                Intrinsics.checkNotNull(speed);
                this.canSameY = speed.getState();
            } else {
                this.canSameY = false;
            }
            if (MinecraftInstance.mc.field_71439_g.field_70122_E) {
                this.lastGroundY = (int)MinecraftInstance.mc.field_71439_g.field_70163_u;
            }
            if (((Boolean)this.autojumpValue.get()).booleanValue()) {
                this.canSameY = true;
                if (MovementUtils.INSTANCE.isMoving() && MinecraftInstance.mc.field_71439_g.field_70122_E) {
                    MinecraftInstance.mc.field_71439_g.func_70664_aZ();
                }
            }
            if (((Boolean)this.jumpYValue.get()).booleanValue()) {
                this.canSameY = false;
                if (MovementUtils.INSTANCE.isMoving() && MinecraftInstance.mc.field_71439_g.field_70122_E) {
                    MinecraftInstance.mc.field_71439_g.func_70664_aZ();
                }
            }
        }
        MinecraftInstance.mc.field_71439_g.func_70031_b(this.getCanSprint());
        if (this.sprintModeValue.equals("WatchDog")) {
            if (MinecraftInstance.mc.field_71439_g.func_70644_a(Potion.field_76424_c)) {
                string = MinecraftInstance.mc.field_71439_g;
                ((EntityPlayerSP)string).field_70159_w *= 0.9;
                string = MinecraftInstance.mc.field_71439_g;
                ((EntityPlayerSP)string).field_70179_y *= 0.9;
            } else {
                string = MinecraftInstance.mc.field_71439_g;
                ((EntityPlayerSP)string).field_70159_w *= 0.93;
                string = MinecraftInstance.mc.field_71439_g;
                ((EntityPlayerSP)string).field_70179_y *= 0.93;
            }
        }
        if (this.sprintModeValue.equals("Bypass") && MinecraftInstance.mc.field_71439_g.field_70122_E) {
            MovementUtils.INSTANCE.setMotion(0.18);
        }
        if (this.sprintModeValue.equals("Matrix") && MinecraftInstance.mc.field_71439_g.field_70122_E) {
            MovementUtils.INSTANCE.setMotion(0.12);
        }
        if (this.sprintModeValue.equals("Fast") && MinecraftInstance.mc.field_71439_g.field_70122_E) {
            MovementUtils.INSTANCE.setMotion(0.18);
        }
        boolean bl = this.shouldGoDown = (Boolean)this.downValue.get() != false && GameSettings.func_100015_a((KeyBinding)MinecraftInstance.mc.field_71474_y.field_74311_E) && this.getBlocksAmount() > 1;
        if (this.shouldGoDown) {
            MinecraftInstance.mc.field_71474_y.field_74311_E.field_74513_e = false;
        }
        if (MinecraftInstance.mc.field_71439_g.field_70122_E) {
            if (this.zitterModeValue.equals("smooth")) {
                if (!GameSettings.func_100015_a((KeyBinding)MinecraftInstance.mc.field_71474_y.field_74366_z)) {
                    MinecraftInstance.mc.field_71474_y.field_74366_z.field_74513_e = false;
                }
                if (!GameSettings.func_100015_a((KeyBinding)MinecraftInstance.mc.field_71474_y.field_74370_x)) {
                    MinecraftInstance.mc.field_71474_y.field_74370_x.field_74513_e = false;
                }
                if (this.zitterTimer.hasTimePassed(100L)) {
                    this.zitterDirection = !this.zitterDirection;
                    this.zitterTimer.reset();
                }
                if (this.zitterDirection) {
                    MinecraftInstance.mc.field_71474_y.field_74366_z.field_74513_e = true;
                    MinecraftInstance.mc.field_71474_y.field_74370_x.field_74513_e = false;
                } else {
                    MinecraftInstance.mc.field_71474_y.field_74366_z.field_74513_e = false;
                    MinecraftInstance.mc.field_71474_y.field_74370_x.field_74513_e = true;
                }
            }
            if (!StringsKt.equals((String)this.eagleValue.get(), "Off", true) && !this.shouldGoDown) {
                double dif = 0.5;
                BlockPos blockPos = new BlockPos(MinecraftInstance.mc.field_71439_g.field_70165_t, MinecraftInstance.mc.field_71439_g.field_70163_u - 1.0, MinecraftInstance.mc.field_71439_g.field_70161_v);
                if (((Number)this.edgeDistanceValue.get()).floatValue() > 0.0f) {
                    for (EnumFacing facingType : EnumFacing.values()) {
                        BlockPos neighbor;
                        if (facingType == EnumFacing.UP || facingType == EnumFacing.DOWN || !BlockUtils.isReplaceable(neighbor = blockPos.func_177972_a(facingType))) continue;
                        double d = facingType == EnumFacing.NORTH || facingType == EnumFacing.SOUTH ? Math.abs((double)neighbor.func_177952_p() + 0.5 - MinecraftInstance.mc.field_71439_g.field_70161_v) : Math.abs((double)neighbor.func_177958_n() + 0.5 - MinecraftInstance.mc.field_71439_g.field_70165_t);
                        double calcDif = d - 0.5;
                        if (!(calcDif < dif)) continue;
                        dif = calcDif;
                    }
                }
                if (this.placedBlocksWithoutEagle >= ((Number)this.blocksToEagleValue.get()).intValue()) {
                    boolean shouldEagle;
                    boolean bl2 = shouldEagle = BlockUtils.isReplaceable(blockPos) || ((Number)this.edgeDistanceValue.get()).floatValue() > 0.0f && dif < (double)((Number)this.edgeDistanceValue.get()).floatValue();
                    if (StringsKt.equals((String)this.eagleValue.get(), "Silent", true)) {
                        if (this.eagleSneaking != shouldEagle) {
                            MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C0BPacketEntityAction((Entity)MinecraftInstance.mc.field_71439_g, shouldEagle ? C0BPacketEntityAction.Action.START_SNEAKING : C0BPacketEntityAction.Action.STOP_SNEAKING));
                        }
                        this.eagleSneaking = shouldEagle;
                    } else {
                        MinecraftInstance.mc.field_71474_y.field_74311_E.field_74513_e = shouldEagle;
                    }
                    this.placedBlocksWithoutEagle = 0;
                } else {
                    int n = this.placedBlocksWithoutEagle;
                    this.placedBlocksWithoutEagle = n + 1;
                }
            }
        }
    }

    @EventTarget
    public final void onPacket(@NotNull PacketEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        if (MinecraftInstance.mc.field_71439_g == null) {
            return;
        }
        Packet<?> packet = event.getPacket();
        if (packet instanceof C03PacketPlayer && this.doSpoof) {
            ((C03PacketPlayer)packet).field_149474_g = true;
        }
        if (packet instanceof C09PacketHeldItemChange) {
            if (((C09PacketHeldItemChange)packet).func_149614_c() == this.slot) {
                event.cancelEvent();
            } else {
                this.slot = ((C09PacketHeldItemChange)packet).func_149614_c();
            }
        } else if (packet instanceof C08PacketPlayerBlockPlacement) {
            ((C08PacketPlayerBlockPlacement)packet).field_149580_e = MinecraftInstance.mc.field_71439_g.field_71071_by.field_70462_a[this.slot];
            ((C08PacketPlayerBlockPlacement)packet).field_149577_f = RangesKt.coerceIn(((C08PacketPlayerBlockPlacement)packet).field_149577_f, -1.0f, 1.0f);
            ((C08PacketPlayerBlockPlacement)packet).field_149578_g = RangesKt.coerceIn(((C08PacketPlayerBlockPlacement)packet).field_149578_g, -1.0f, 1.0f);
            ((C08PacketPlayerBlockPlacement)packet).field_149584_h = RangesKt.coerceIn(((C08PacketPlayerBlockPlacement)packet).field_149584_h, -1.0f, 1.0f);
        }
    }

    @EventTarget
    public final void onMotion(@NotNull MotionEvent event) {
        EventState eventState;
        block35: {
            Intrinsics.checkNotNullParameter(event, "event");
            eventState = event.getEventState();
            this.towerStatus = false;
            boolean bl = this.towerStatus = (Boolean)this.stopWhenBlockAboveValue.get() == false || BlockUtils.getBlock(new BlockPos(MinecraftInstance.mc.field_71439_g.field_70165_t, MinecraftInstance.mc.field_71439_g.field_70163_u + (double)2, MinecraftInstance.mc.field_71439_g.field_70161_v)) instanceof BlockAir;
            if (!this.towerStatus) break block35;
            String string = ((String)this.towerActiveValue.get()).toLowerCase(Locale.ROOT);
            Intrinsics.checkNotNullExpressionValue(string, "this as java.lang.String).toLowerCase(Locale.ROOT)");
            switch (string) {
                case "off": {
                    this.towerStatus = false;
                    break;
                }
                case "always": {
                    this.towerStatus = MinecraftInstance.mc.field_71474_y.field_74370_x.func_151470_d() || MinecraftInstance.mc.field_71474_y.field_74366_z.func_151470_d() || MinecraftInstance.mc.field_71474_y.field_74351_w.func_151470_d() || MinecraftInstance.mc.field_71474_y.field_74368_y.func_151470_d();
                    break;
                }
                case "pressspace": {
                    this.towerStatus = MinecraftInstance.mc.field_71474_y.field_74314_A.func_151470_d();
                    break;
                }
                case "nomove": {
                    this.towerStatus = !MinecraftInstance.mc.field_71474_y.field_74370_x.func_151470_d() && !MinecraftInstance.mc.field_71474_y.field_74366_z.func_151470_d() && !MinecraftInstance.mc.field_71474_y.field_74351_w.func_151470_d() && !MinecraftInstance.mc.field_71474_y.field_74368_y.func_151470_d() && MinecraftInstance.mc.field_71474_y.field_74314_A.func_151470_d();
                    break;
                }
                case "onmove": {
                    boolean bl2 = this.towerStatus = MovementUtils.INSTANCE.isMoving() && MinecraftInstance.mc.field_71474_y.field_74314_A.func_151470_d();
                }
            }
        }
        if (((Boolean)this.stairsValue.get()).booleanValue() && MovementUtils.INSTANCE.isMoving() && MinecraftInstance.mc.field_71474_y.field_74314_A.func_151470_d()) {
            if (MinecraftInstance.mc.field_71439_g.field_70163_u % 1.0 <= 0.00153598) {
                MinecraftInstance.mc.field_71439_g.func_70107_b(MinecraftInstance.mc.field_71439_g.field_70165_t, Math.floor(MinecraftInstance.mc.field_71439_g.field_70163_u), MinecraftInstance.mc.field_71439_g.field_70161_v);
                MinecraftInstance.mc.field_71439_g.field_70181_x = 0.3681289;
            } else if (MinecraftInstance.mc.field_71439_g.field_70163_u % 1.0 < 0.1 && this.offGroundTicks != 0) {
                MinecraftInstance.mc.field_71439_g.func_70107_b(MinecraftInstance.mc.field_71439_g.field_70165_t, Math.floor(MinecraftInstance.mc.field_71439_g.field_70163_u), MinecraftInstance.mc.field_71439_g.field_70161_v);
            }
        } else if (this.towerStatus) {
            this.move();
        }
        if (this.rotationsValue.equals("Snap") || this.rotationsValue.equals("Grim") || this.rotationsValue.equals("Grim2") || this.rotationsValue.equals("LGBT+")) {
            if (!Intrinsics.areEqual(this.rotationsValue.get(), "None")) {
                // empty if block
            }
        } else if (!Intrinsics.areEqual(this.rotationsValue.get(), "None") && this.lockRotation != null && this.silentRotationValue.get().booleanValue()) {
            Rotation rotation = RotationUtils.limitAngleChange(RotationUtils.serverRotation, this.lockRotation, this.getRotationSpeed());
            Intrinsics.checkNotNullExpressionValue(rotation, "limitAngleChange(Rotatio…kRotation, rotationSpeed)");
            Rotation limitedRotation = rotation;
            RotationUtils.setTargetRotation(limitedRotation, 0);
        }
        if (event.getEventState() == EventState.PRE) {
            this.update();
        }
        if (this.placeModeValue.equals(eventState.getStateName()) && !this.towerStatus) {
            this.place();
        }
        if (this.towerPlaceModeValue.equals(eventState.getStateName()) && this.towerStatus) {
            this.place();
        }
        if (MinecraftInstance.mc.field_71439_g.field_70122_E) {
            this.offGroundTicks = 0;
        } else {
            int n = this.offGroundTicks;
            this.offGroundTicks = n + 1;
        }
        if (!(this.targetPlace != null && this.towerStatus || this.lastPlace != 0)) {
            this.delayTimer.reset();
        }
    }

    private final void fakeJump() {
        if (!((Boolean)this.towerFakeJumpValue.get()).booleanValue()) {
            return;
        }
        MinecraftInstance.mc.field_71439_g.field_70160_al = true;
        MinecraftInstance.mc.field_71439_g.func_71029_a(StatList.field_75953_u);
    }

    private final void move() {
        String string = ((String)this.towerModeValue.get()).toLowerCase(Locale.ROOT);
        Intrinsics.checkNotNullExpressionValue(string, "this as java.lang.String).toLowerCase(Locale.ROOT)");
        switch (string) {
            case "none": {
                if (!MinecraftInstance.mc.field_71439_g.field_70122_E) break;
                this.fakeJump();
                MinecraftInstance.mc.field_71439_g.field_70181_x = 0.42;
                break;
            }
            case "jump": {
                if (!MinecraftInstance.mc.field_71439_g.field_70122_E || !this.towerTimer.hasTimePassed(((Number)this.jumpDelayValue.get()).intValue())) break;
                this.fakeJump();
                MinecraftInstance.mc.field_71439_g.field_70181_x = ((Number)this.jumpMotionValue.get()).floatValue();
                this.towerTimer.reset();
                break;
            }
            case "motion": {
                if (MinecraftInstance.mc.field_71439_g.field_70122_E) {
                    this.fakeJump();
                    MinecraftInstance.mc.field_71439_g.field_70181_x = 0.42;
                    break;
                }
                if (!(MinecraftInstance.mc.field_71439_g.field_70181_x < 0.1)) break;
                MinecraftInstance.mc.field_71439_g.field_70181_x = -0.3;
                break;
            }
            case "motion2": {
                if (MinecraftInstance.mc.field_71439_g.field_70122_E) {
                    this.fakeJump();
                    MinecraftInstance.mc.field_71439_g.field_70181_x = 0.42;
                    break;
                }
                if (!(MinecraftInstance.mc.field_71439_g.field_70181_x < 0.18)) break;
                EntityPlayerSP entityPlayerSP = MinecraftInstance.mc.field_71439_g;
                entityPlayerSP.field_70181_x -= 0.02;
                break;
            }
            case "motiontp": {
                if (MinecraftInstance.mc.field_71439_g.field_70122_E) {
                    this.fakeJump();
                    MinecraftInstance.mc.field_71439_g.field_70181_x = 0.42;
                    break;
                }
                if (!(MinecraftInstance.mc.field_71439_g.field_70181_x < 0.23)) break;
                MinecraftInstance.mc.field_71439_g.func_70107_b(MinecraftInstance.mc.field_71439_g.field_70165_t, MathKt.truncate(MinecraftInstance.mc.field_71439_g.field_70163_u), MinecraftInstance.mc.field_71439_g.field_70161_v);
                break;
            }
            case "motiontp2": {
                if (MinecraftInstance.mc.field_71439_g.field_70122_E) {
                    this.fakeJump();
                    MinecraftInstance.mc.field_71439_g.field_70181_x = 0.42;
                    break;
                }
                if (!(MinecraftInstance.mc.field_71439_g.field_70181_x < 0.23)) break;
                MinecraftInstance.mc.field_71439_g.func_70107_b(MinecraftInstance.mc.field_71439_g.field_70165_t, MathKt.truncate(MinecraftInstance.mc.field_71439_g.field_70163_u), MinecraftInstance.mc.field_71439_g.field_70161_v);
                MinecraftInstance.mc.field_71439_g.field_70122_E = true;
                MinecraftInstance.mc.field_71439_g.field_70181_x = 0.42;
                break;
            }
            case "ncp": {
                if (MinecraftInstance.mc.field_71439_g.field_70163_u % 1.0 <= 0.00153598) {
                    MinecraftInstance.mc.field_71439_g.func_70107_b(MinecraftInstance.mc.field_71439_g.field_70165_t, Math.floor(MinecraftInstance.mc.field_71439_g.field_70163_u), MinecraftInstance.mc.field_71439_g.field_70161_v);
                    MinecraftInstance.mc.field_71439_g.field_70181_x = 0.41998;
                    break;
                }
                if (!(MinecraftInstance.mc.field_71439_g.field_70163_u % 1.0 < 0.1) || this.offGroundTicks == 0) break;
                MinecraftInstance.mc.field_71439_g.func_70107_b(MinecraftInstance.mc.field_71439_g.field_70165_t, Math.floor(MinecraftInstance.mc.field_71439_g.field_70163_u), MinecraftInstance.mc.field_71439_g.field_70161_v);
                break;
            }
            case "packet": {
                if (!MinecraftInstance.mc.field_71439_g.field_70122_E || !this.towerTimer.hasTimePassed(2)) break;
                this.fakeJump();
                MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(MinecraftInstance.mc.field_71439_g.field_70165_t, MinecraftInstance.mc.field_71439_g.field_70163_u + 0.42, MinecraftInstance.mc.field_71439_g.field_70161_v, false));
                MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C03PacketPlayer.C04PacketPlayerPosition(MinecraftInstance.mc.field_71439_g.field_70165_t, MinecraftInstance.mc.field_71439_g.field_70163_u + 0.753, MinecraftInstance.mc.field_71439_g.field_70161_v, false));
                MinecraftInstance.mc.field_71439_g.func_70107_b(MinecraftInstance.mc.field_71439_g.field_70165_t, MinecraftInstance.mc.field_71439_g.field_70163_u + 1.0, MinecraftInstance.mc.field_71439_g.field_70161_v);
                this.towerTimer.reset();
                break;
            }
            case "teleport": {
                if (this.teleportNoMotionValue.get().booleanValue()) {
                    MinecraftInstance.mc.field_71439_g.field_70181_x = 0.0;
                }
                if (!MinecraftInstance.mc.field_71439_g.field_70122_E && this.teleportGroundValue.get().booleanValue() || !this.towerTimer.hasTimePassed(((Number)this.teleportDelayValue.get()).intValue())) break;
                this.fakeJump();
                MinecraftInstance.mc.field_71439_g.func_70634_a(MinecraftInstance.mc.field_71439_g.field_70165_t, MinecraftInstance.mc.field_71439_g.field_70163_u + ((Number)this.teleportHeightValue.get()).doubleValue(), MinecraftInstance.mc.field_71439_g.field_70161_v);
                this.towerTimer.reset();
                break;
            }
            case "constantmotion": {
                if (MinecraftInstance.mc.field_71439_g.field_70122_E) {
                    this.fakeJump();
                    this.jumpGround = MinecraftInstance.mc.field_71439_g.field_70163_u;
                    MinecraftInstance.mc.field_71439_g.field_70181_x = ((Number)this.constantMotionValue.get()).floatValue();
                }
                if (!(MinecraftInstance.mc.field_71439_g.field_70163_u > this.jumpGround + ((Number)this.constantMotionJumpGroundValue.get()).doubleValue())) break;
                this.fakeJump();
                MinecraftInstance.mc.field_71439_g.func_70107_b(MinecraftInstance.mc.field_71439_g.field_70165_t, MinecraftInstance.mc.field_71439_g.field_70163_u, MinecraftInstance.mc.field_71439_g.field_70161_v);
                MinecraftInstance.mc.field_71439_g.field_70181_x = ((Number)this.constantMotionValue.get()).floatValue();
                this.jumpGround = MinecraftInstance.mc.field_71439_g.field_70163_u;
                break;
            }
            case "plusmotion": {
                EntityPlayerSP entityPlayerSP = MinecraftInstance.mc.field_71439_g;
                entityPlayerSP.field_70181_x += ((Number)this.plusMotionValue.get()).doubleValue();
                if (MinecraftInstance.mc.field_71439_g.field_70181_x >= (double)((Number)this.plusMaxMotionValue.get()).floatValue()) {
                    MinecraftInstance.mc.field_71439_g.field_70181_x = ((Number)this.plusMaxMotionValue.get()).floatValue();
                }
                this.fakeJump();
                break;
            }
            case "stablemotion": {
                MinecraftInstance.mc.field_71439_g.field_70181_x = ((Number)this.stableMotionValue.get()).floatValue();
                this.fakeJump();
                break;
            }
            case "aac3.3.9": {
                if (MinecraftInstance.mc.field_71439_g.field_70122_E) {
                    this.fakeJump();
                    MinecraftInstance.mc.field_71439_g.field_70181_x = 0.4001;
                }
                MinecraftInstance.mc.field_71428_T.field_74278_d = 1.0f;
                if (!(MinecraftInstance.mc.field_71439_g.field_70181_x < 0.0)) break;
                EntityPlayerSP entityPlayerSP = MinecraftInstance.mc.field_71439_g;
                entityPlayerSP.field_70181_x -= 9.45E-6;
                MinecraftInstance.mc.field_71428_T.field_74278_d = 1.6f;
                break;
            }
            case "aac3.6.4": {
                if (MinecraftInstance.mc.field_71439_g.field_70173_aa % 4 == 1) {
                    MinecraftInstance.mc.field_71439_g.field_70181_x = 0.4195464;
                    MinecraftInstance.mc.field_71439_g.func_70107_b(MinecraftInstance.mc.field_71439_g.field_70165_t - 0.035, MinecraftInstance.mc.field_71439_g.field_70163_u, MinecraftInstance.mc.field_71439_g.field_70161_v);
                    break;
                }
                if (MinecraftInstance.mc.field_71439_g.field_70173_aa % 4 != 0) break;
                MinecraftInstance.mc.field_71439_g.field_70181_x = -0.5;
                MinecraftInstance.mc.field_71439_g.func_70107_b(MinecraftInstance.mc.field_71439_g.field_70165_t + 0.035, MinecraftInstance.mc.field_71439_g.field_70163_u, MinecraftInstance.mc.field_71439_g.field_70161_v);
                break;
            }
            case "aac4.4constant": {
                if (MinecraftInstance.mc.field_71439_g.field_70122_E) {
                    this.fakeJump();
                    this.jumpGround = MinecraftInstance.mc.field_71439_g.field_70163_u;
                    MinecraftInstance.mc.field_71439_g.field_70181_x = 0.42;
                }
                MinecraftInstance.mc.field_71439_g.field_70159_w = 0.0;
                MinecraftInstance.mc.field_71439_g.field_70179_y = -1.0E-8;
                MinecraftInstance.mc.field_71439_g.field_70747_aH = 0.0f;
                MinecraftInstance.mc.field_71428_T.field_74278_d = 0.6f;
                if (!(MinecraftInstance.mc.field_71439_g.field_70163_u > this.jumpGround + 0.99)) break;
                this.fakeJump();
                MinecraftInstance.mc.field_71439_g.func_70107_b(MinecraftInstance.mc.field_71439_g.field_70165_t, MinecraftInstance.mc.field_71439_g.field_70163_u - 0.001335979112146, MinecraftInstance.mc.field_71439_g.field_70161_v);
                MinecraftInstance.mc.field_71439_g.field_70181_x = 0.42;
                this.jumpGround = MinecraftInstance.mc.field_71439_g.field_70163_u;
                MinecraftInstance.mc.field_71428_T.field_74278_d = 0.75f;
                break;
            }
            case "verus": {
                MinecraftInstance.mc.field_71439_g.func_70107_b(MinecraftInstance.mc.field_71439_g.field_70165_t, (double)MathKt.roundToInt(MinecraftInstance.mc.field_71439_g.field_70163_u * (double)2) / (double)2, MinecraftInstance.mc.field_71439_g.field_70161_v);
                if (MinecraftInstance.mc.field_71439_g.field_70173_aa % 2 == 0) {
                    MinecraftInstance.mc.field_71439_g.field_70181_x = 0.5;
                    MinecraftInstance.mc.field_71428_T.field_74278_d = 0.8f;
                    this.doSpoof = false;
                    break;
                }
                MinecraftInstance.mc.field_71428_T.field_74278_d = 1.33f;
                MinecraftInstance.mc.field_71439_g.field_70181_x = 0.0;
                MinecraftInstance.mc.field_71439_g.field_70122_E = true;
                this.doSpoof = true;
                break;
            }
            case "aac4jump": {
                MinecraftInstance.mc.field_71428_T.field_74278_d = 0.97f;
                if (!MinecraftInstance.mc.field_71439_g.field_70122_E) break;
                this.fakeJump();
                MinecraftInstance.mc.field_71439_g.field_70181_x = 0.387565;
                MinecraftInstance.mc.field_71428_T.field_74278_d = 1.05f;
                break;
            }
            case "matrix6.9.2": {
                if (MinecraftInstance.mc.field_71439_g.field_70122_E) {
                    this.fakeJump();
                    MinecraftInstance.mc.field_71439_g.field_70181_x = 0.42;
                    break;
                }
                if (!(MinecraftInstance.mc.field_71439_g.field_70181_x < 0.1914514191918)) break;
                MinecraftInstance.mc.field_71439_g.func_70107_b(MinecraftInstance.mc.field_71439_g.field_70165_t, MathKt.truncate(MinecraftInstance.mc.field_71439_g.field_70163_u), MinecraftInstance.mc.field_71439_g.field_70161_v);
                MinecraftInstance.mc.field_71439_g.field_70122_E = true;
                MinecraftInstance.mc.field_71439_g.field_70181_x = 0.48114514191918;
                break;
            }
            case "vanilla": {
                this.fakeJump();
                MinecraftInstance.mc.field_71439_g.field_70181_x = 0.41;
            }
        }
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private final void update() {
        if (!this.highBlock.equals("NCP")) {
            boolean bl;
            if (!this.autoBlockValue.equals("off")) {
                if (InventoryUtils.INSTANCE.findAutoBlockBlock() == -1) {
                    return;
                }
                bl = false;
            } else {
                if (MinecraftInstance.mc.field_71439_g.func_70694_bm() == null) return;
                Item item = MinecraftInstance.mc.field_71439_g.func_70694_bm().func_77973_b();
                if (item == null) {
                    throw new NullPointerException("null cannot be cast to non-null type net.minecraft.item.ItemBlock");
                }
                if (InventoryUtils.INSTANCE.isBlockListBlock((ItemBlock)item)) {
                    return;
                }
                bl = false;
            }
            if (bl) {
                return;
            }
            this.findBlock(((Number)this.expandLengthValue.get()).intValue() > 1);
            return;
        } else {
            boolean bl;
            if (!this.autoBlockValue.equals("off")) {
                if (InventoryUtils.INSTANCE.findHighBlock() == -1) {
                    return;
                }
                bl = false;
            } else {
                if (MinecraftInstance.mc.field_71439_g.func_70694_bm() == null) return;
                Item item = MinecraftInstance.mc.field_71439_g.func_70694_bm().func_77973_b();
                if (item == null) {
                    throw new NullPointerException("null cannot be cast to non-null type net.minecraft.item.ItemBlock");
                }
                if (InventoryUtils.INSTANCE.isBlockListBlock((ItemBlock)item)) {
                    return;
                }
                bl = false;
            }
            if (bl) {
                return;
            }
            this.findBlock(((Number)this.expandLengthValue.get()).intValue() > 1);
        }
    }

    private final void findBlock(boolean expand) {
        block9: {
            BlockPos blockPosition;
            block8: {
                block6: {
                    block7: {
                        BlockPos blockPos = this.shouldGoDown ? (MinecraftInstance.mc.field_71439_g.field_70163_u == (double)((int)MinecraftInstance.mc.field_71439_g.field_70163_u) + 0.5 ? new BlockPos(MinecraftInstance.mc.field_71439_g.field_70165_t, MinecraftInstance.mc.field_71439_g.field_70163_u - 0.6, MinecraftInstance.mc.field_71439_g.field_70161_v) : new BlockPos(MinecraftInstance.mc.field_71439_g.field_70165_t, MinecraftInstance.mc.field_71439_g.field_70163_u - 0.6, MinecraftInstance.mc.field_71439_g.field_70161_v).func_177977_b()) : (MinecraftInstance.mc.field_71439_g.field_70163_u == (double)((int)MinecraftInstance.mc.field_71439_g.field_70163_u) + 0.5 && !this.canSameY ? new BlockPos((Entity)MinecraftInstance.mc.field_71439_g) : (blockPosition = this.canSameY && (double)this.lastGroundY <= MinecraftInstance.mc.field_71439_g.field_70163_u ? new BlockPos(MinecraftInstance.mc.field_71439_g.field_70165_t, (double)this.lastGroundY - 1.0, MinecraftInstance.mc.field_71439_g.field_70161_v) : new BlockPos(MinecraftInstance.mc.field_71439_g.field_70165_t, MinecraftInstance.mc.field_71439_g.field_70163_u, MinecraftInstance.mc.field_71439_g.field_70161_v).func_177977_b()));
                        if (expand) break block6;
                        if (!BlockUtils.isReplaceable(blockPosition)) break block7;
                        Intrinsics.checkNotNullExpressionValue(blockPosition, "blockPosition");
                        if (!this.search(blockPosition, !this.shouldGoDown)) break block6;
                    }
                    return;
                }
                if (!expand) break block8;
                int n = 0;
                int n2 = ((Number)this.expandLengthValue.get()).intValue();
                while (n < n2) {
                    int i = n++;
                    BlockPos blockPos = blockPosition.func_177982_a(MinecraftInstance.mc.field_71439_g.func_174811_aO() == EnumFacing.WEST ? -i : (MinecraftInstance.mc.field_71439_g.func_174811_aO() == EnumFacing.EAST ? i : 0), 0, MinecraftInstance.mc.field_71439_g.func_174811_aO() == EnumFacing.NORTH ? -i : (MinecraftInstance.mc.field_71439_g.func_174811_aO() == EnumFacing.SOUTH ? i : 0));
                    Intrinsics.checkNotNullExpressionValue(blockPos, "blockPosition.add(\n     …                        )");
                    if (!this.search(blockPos, false)) continue;
                    return;
                }
                break block9;
            }
            if (!((Boolean)this.searchValue.get()).booleanValue()) break block9;
            int n = -1;
            while (n < 2) {
                int x = n++;
                int n3 = -1;
                while (n3 < 2) {
                    int z = n3++;
                    BlockPos blockPos = blockPosition.func_177982_a(x, 0, z);
                    Intrinsics.checkNotNullExpressionValue(blockPos, "blockPosition.add(x, 0, z)");
                    if (!this.search(blockPos, !this.shouldGoDown)) continue;
                    return;
                }
            }
        }
    }

    private final void place() {
        ItemStack itemStack;
        int blockSlot;
        boolean isDynamicSprint;
        block40: {
            block39: {
                block36: {
                    block38: {
                        MovingObjectPosition rayTraceInfo;
                        Object object;
                        block37: {
                            block35: {
                                block34: {
                                    if (this.targetPlace == null) {
                                        if (this.lastPlace == 0) {
                                            this.delayTimer.reset();
                                        }
                                        if (this.lastPlace > 0) {
                                            int n = this.lastPlace;
                                            this.lastPlace = n + -1;
                                        }
                                        return;
                                    }
                                    if (!this.delayTimer.hasTimePassed(this.delay)) break block34;
                                    if (this.towerStatus || !this.canSameY) break block35;
                                    PlaceInfo placeInfo = this.targetPlace;
                                    Intrinsics.checkNotNull(placeInfo);
                                    if (this.lastGroundY - 1 == (int)placeInfo.getVec3().field_72448_b) break block35;
                                }
                                return;
                            }
                            if (this.rotationsValue.equals("None")) break block36;
                            object = MinecraftInstance.mc.field_71439_g;
                            Intrinsics.checkNotNullExpressionValue(object, "mc.thePlayer");
                            rayTraceInfo = EntityExtensionKt.rayTraceWithServerSideRotation((Entity)object, 5.0);
                            String string = ((String)this.hitableCheckValue.get()).toLowerCase(Locale.ROOT);
                            Intrinsics.checkNotNullExpressionValue(string, "this as java.lang.String).toLowerCase(Locale.ROOT)");
                            object = string;
                            if (!Intrinsics.areEqual(object, "simple")) break block37;
                            BlockPos blockPos = rayTraceInfo.func_178782_a();
                            PlaceInfo placeInfo = this.targetPlace;
                            Intrinsics.checkNotNull(placeInfo);
                            if (!blockPos.equals((Object)placeInfo.getBlockPos())) {
                                return;
                            }
                            break block36;
                        }
                        if (!Intrinsics.areEqual(object, "strict")) break block36;
                        BlockPos blockPos = rayTraceInfo.func_178782_a();
                        PlaceInfo placeInfo = this.targetPlace;
                        Intrinsics.checkNotNull(placeInfo);
                        if (!blockPos.equals((Object)placeInfo.getBlockPos())) break block38;
                        EnumFacing enumFacing = rayTraceInfo.field_178784_b;
                        PlaceInfo placeInfo2 = this.targetPlace;
                        Intrinsics.checkNotNull(placeInfo2);
                        if (enumFacing == placeInfo2.getEnumFacing()) break block36;
                    }
                    return;
                }
                isDynamicSprint = this.sprintModeValue.equals("dynamic");
                blockSlot = -1;
                itemStack = MinecraftInstance.mc.field_71439_g.func_70694_bm();
                if (MinecraftInstance.mc.field_71439_g.func_70694_bm() == null || !(MinecraftInstance.mc.field_71439_g.func_70694_bm().func_77973_b() instanceof ItemBlock)) break block39;
                Item item = MinecraftInstance.mc.field_71439_g.func_70694_bm().func_77973_b();
                if (item == null) {
                    throw new NullPointerException("null cannot be cast to non-null type net.minecraft.item.ItemBlock");
                }
                if (!InventoryUtils.INSTANCE.isBlockListBlock((ItemBlock)item)) break block40;
            }
            if (!this.highBlock.equals("NCP")) {
                if (this.autoBlockValue.equals("off")) {
                    return;
                }
                blockSlot = InventoryUtils.INSTANCE.findAutoBlockBlock();
                if (blockSlot == -1) {
                    return;
                }
                if (this.autoBlockValue.equals("LiteSpoof") || this.autoBlockValue.equals("Spoof")) {
                    MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C09PacketHeldItemChange(blockSlot - 36));
                } else {
                    MinecraftInstance.mc.field_71439_g.field_71071_by.field_70461_c = blockSlot - 36;
                }
                itemStack = MinecraftInstance.mc.field_71439_g.field_71069_bz.func_75139_a(blockSlot).func_75211_c();
            } else {
                if (this.autoBlockValue.equals("off")) {
                    return;
                }
                blockSlot = InventoryUtils.INSTANCE.findHighBlock();
                if (blockSlot == -1) {
                    return;
                }
                if (this.autoBlockValue.equals("LiteSpoof") || this.autoBlockValue.equals("Spoof")) {
                    MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C09PacketHeldItemChange(blockSlot - 36));
                } else {
                    MinecraftInstance.mc.field_71439_g.field_71071_by.field_70461_c = blockSlot - 36;
                }
                itemStack = MinecraftInstance.mc.field_71439_g.field_71069_bz.func_75139_a(blockSlot).func_75211_c();
            }
        }
        if (isDynamicSprint) {
            MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C0BPacketEntityAction((Entity)MinecraftInstance.mc.field_71439_g, C0BPacketEntityAction.Action.STOP_SPRINTING));
        }
        PlayerControllerMP playerControllerMP = MinecraftInstance.mc.field_71442_b;
        EntityPlayerSP entityPlayerSP = MinecraftInstance.mc.field_71439_g;
        WorldClient worldClient = MinecraftInstance.mc.field_71441_e;
        PlaceInfo placeInfo = this.targetPlace;
        Intrinsics.checkNotNull(placeInfo);
        BlockPos blockPos = placeInfo.getBlockPos();
        PlaceInfo placeInfo3 = this.targetPlace;
        Intrinsics.checkNotNull(placeInfo3);
        EnumFacing enumFacing = placeInfo3.getEnumFacing();
        PlaceInfo placeInfo4 = this.targetPlace;
        Intrinsics.checkNotNull(placeInfo4);
        if (playerControllerMP.func_178890_a(entityPlayerSP, worldClient, itemStack, blockPos, enumFacing, placeInfo4.getVec3())) {
            this.delay = TimeUtils.INSTANCE.randomDelay(((Number)this.minDelayValue.get()).intValue(), ((Number)this.maxDelayValue.get()).intValue());
            if (MinecraftInstance.mc.field_71439_g.field_70122_E) {
                float modifier = ((Number)this.XZModifierValue.get()).floatValue();
                EntityPlayerSP entityPlayerSP2 = MinecraftInstance.mc.field_71439_g;
                entityPlayerSP2.field_70159_w *= (double)((int)modifier);
                entityPlayerSP2 = MinecraftInstance.mc.field_71439_g;
                entityPlayerSP2.field_70179_y *= (double)((int)modifier);
            }
            if (((Boolean)this.swingValue.get()).booleanValue()) {
                MinecraftInstance.mc.field_71439_g.func_71038_i();
            } else {
                MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C0APacketAnimation());
            }
            this.lastPlace = 2;
            PlaceInfo placeInfo5 = this.targetPlace;
            Intrinsics.checkNotNull(placeInfo5);
            BlockPos blockPos2 = placeInfo5.getBlockPos();
            PlaceInfo placeInfo6 = this.targetPlace;
            Intrinsics.checkNotNull(placeInfo6);
            this.lastPlaceBlock = blockPos2.func_177971_a(placeInfo6.getEnumFacing().func_176730_m());
        }
        if (isDynamicSprint) {
            MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C0BPacketEntityAction((Entity)MinecraftInstance.mc.field_71439_g, C0BPacketEntityAction.Action.START_SPRINTING));
        }
        if (this.autoBlockValue.equals("LiteSpoof") && blockSlot >= 0) {
            MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C09PacketHeldItemChange(MinecraftInstance.mc.field_71439_g.field_71071_by.field_70461_c));
        }
        this.targetPlace = null;
    }

    @Override
    public void onDisable() {
        if (MinecraftInstance.mc.field_71439_g == null) {
            return;
        }
        if (!GameSettings.func_100015_a((KeyBinding)MinecraftInstance.mc.field_71474_y.field_74311_E)) {
            MinecraftInstance.mc.field_71474_y.field_74311_E.field_74513_e = false;
            if (this.eagleSneaking) {
                MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C0BPacketEntityAction((Entity)MinecraftInstance.mc.field_71439_g, C0BPacketEntityAction.Action.STOP_SNEAKING));
            }
        }
        if (!GameSettings.func_100015_a((KeyBinding)MinecraftInstance.mc.field_71474_y.field_74366_z)) {
            MinecraftInstance.mc.field_71474_y.field_74366_z.field_74513_e = false;
        }
        if (!GameSettings.func_100015_a((KeyBinding)MinecraftInstance.mc.field_71474_y.field_74370_x)) {
            MinecraftInstance.mc.field_71474_y.field_74370_x.field_74513_e = false;
        }
        this.lockRotation = null;
        MinecraftInstance.mc.field_71428_T.field_74278_d = 1.0f;
        this.shouldGoDown = false;
        RotationUtils.reset();
        if (this.slot != MinecraftInstance.mc.field_71439_g.field_71071_by.field_70461_c) {
            MinecraftInstance.mc.func_147114_u().func_147297_a((Packet)new C09PacketHeldItemChange(MinecraftInstance.mc.field_71439_g.field_71071_by.field_70461_c));
        }
    }

    @EventTarget
    public final void onMove(@NotNull MoveEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        if (((Boolean)this.safeWalkValue.get()).booleanValue() && MinecraftInstance.mc.field_71439_g.field_70122_E) {
            event.setSafeWalk(true);
        }
    }

    @EventTarget
    public final void onRender2D(@NotNull Render2DEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        this.progress = (float)(System.currentTimeMillis() - this.lastMS) / 100.0f;
        if (this.progress >= 1.0f) {
            this.progress = 1.0f;
        }
        String counterMode = (String)this.counterDisplayValue.get();
        ScaledResolution scaledResolution = new ScaledResolution(MinecraftInstance.mc);
        String info = this.getBlocksAmount() + " Blocks";
        int infoWidth = Fonts.fontSFUI40.func_78256_a(info);
        int infoWidth2 = Fonts.minecraftFont.func_78256_a(this.getBlocksAmount() + "");
        if (StringsKt.equals(counterMode, "advanced", true)) {
            boolean canRenderStack;
            boolean bl = canRenderStack = this.slot >= 0 && this.slot < 9 && MinecraftInstance.mc.field_71439_g.field_71071_by.field_70462_a[this.slot] != null && MinecraftInstance.mc.field_71439_g.field_71071_by.field_70462_a[this.slot].func_77973_b() != null && MinecraftInstance.mc.field_71439_g.field_71071_by.field_70462_a[this.slot].func_77973_b() instanceof ItemBlock;
            if (canRenderStack) {
                RenderUtils.drawRect((float)(scaledResolution.func_78326_a() / 2 - infoWidth / 2 - 4), (float)(scaledResolution.func_78328_b() / 2 - 25), (float)(scaledResolution.func_78326_a() / 2 + infoWidth / 2 + 4), (float)(scaledResolution.func_78328_b() / 2 - 5), -1610612736);
                GlStateManager.func_179094_E();
                GlStateManager.func_179109_b((float)(scaledResolution.func_78326_a() / 2 - 8), (float)(scaledResolution.func_78328_b() / 2 - 4), (float)(scaledResolution.func_78326_a() / 2 - 8));
                ItemStack itemStack = MinecraftInstance.mc.field_71439_g.field_71071_by.field_70462_a[this.slot];
                Intrinsics.checkNotNullExpressionValue(itemStack, "mc.thePlayer.inventory.mainInventory[slot]");
                this.renderItemStack(itemStack, 0, 0);
                GlStateManager.func_179121_F();
            }
            GlStateManager.func_179117_G();
            Fonts.fontSFUI40.drawCenteredString(info, scaledResolution.func_78326_a() / 2, scaledResolution.func_78328_b() / 2 - 20, -1);
        }
        if (StringsKt.equals(counterMode, "novoline", true)) {
            if (this.slot >= 0 && this.slot < 9 && MinecraftInstance.mc.field_71439_g.field_71071_by.field_70462_a[this.slot] != null && MinecraftInstance.mc.field_71439_g.field_71071_by.field_70462_a[this.slot].func_77973_b() != null && MinecraftInstance.mc.field_71439_g.field_71071_by.field_70462_a[this.slot].func_77973_b() instanceof ItemBlock) {
                GlStateManager.func_179094_E();
                GlStateManager.func_179109_b((float)(scaledResolution.func_78326_a() / 2 - 22), (float)(scaledResolution.func_78328_b() / 2 + 16), (float)(scaledResolution.func_78326_a() / 2 - 22));
                ItemStack itemStack = MinecraftInstance.mc.field_71439_g.field_71071_by.field_70462_a[this.slot];
                Intrinsics.checkNotNullExpressionValue(itemStack, "mc.thePlayer.inventory.mainInventory[slot]");
                this.renderItemStack(itemStack, 0, 0);
                GlStateManager.func_179121_F();
            }
            GlStateManager.func_179117_G();
            Fonts.minecraftFont.func_175065_a(info, (float)(scaledResolution.func_78326_a() / 2), (float)(scaledResolution.func_78328_b() / 2 + 20), -1, true);
        }
        if (StringsKt.equals(counterMode, "simple", true)) {
            Fonts.minecraftFont.func_175065_a(this.getBlocksAmount() + " Blocks", (float)scaledResolution.func_78326_a() / 1.95f, (float)(scaledResolution.func_78328_b() / 2 + 20), -1, true);
        }
        if (StringsKt.equals(counterMode, "astolfo", true)) {
            Fonts.minecraftFont.func_175065_a(this.getBlocksAmount() + " Blocks", (float)scaledResolution.func_78326_a() / 1.85f, (float)(scaledResolution.func_78328_b() / 2 - 3), -1, true);
        }
        if (StringsKt.equals(counterMode, "prepost", true)) {
            Fonts.minecraftFont.func_175065_a((String)this.placeModeValue.get() + " , " + (String)this.towerPlaceModeValue.get(), (float)scaledResolution.func_78326_a() / 1.95f, (float)(scaledResolution.func_78328_b() / 2 + 20), -1, true);
        }
        if (StringsKt.equals(counterMode, "sigma", true)) {
            GlStateManager.func_179109_b((float)0.0f, (float)(-14.0f - this.progress * 4.0f), (float)0.0f);
            GL11.glEnable((int)3042);
            GL11.glDisable((int)3553);
            GL11.glBlendFunc((int)770, (int)771);
            GL11.glEnable((int)2848);
            GL11.glColor4f((float)0.15f, (float)0.15f, (float)0.15f, (float)this.progress);
            GL11.glBegin((int)6);
            GL11.glVertex2d((double)(StaticStorage.scaledResolution.func_78326_a() / 2 - 3), (double)(StaticStorage.scaledResolution.func_78328_b() - 60));
            GL11.glVertex2d((double)(StaticStorage.scaledResolution.func_78326_a() / 2), (double)(StaticStorage.scaledResolution.func_78328_b() - 57));
            GL11.glVertex2d((double)(StaticStorage.scaledResolution.func_78326_a() / 2 + 3), (double)(StaticStorage.scaledResolution.func_78328_b() - 60));
            GL11.glEnd();
            GL11.glEnable((int)3553);
            GL11.glDisable((int)3042);
            GL11.glDisable((int)2848);
            RenderUtils.drawRoundedRect(StaticStorage.scaledResolution.func_78326_a() / 2 - infoWidth / 2 - 4, StaticStorage.scaledResolution.func_78328_b() - 60, StaticStorage.scaledResolution.func_78326_a() / 2 + infoWidth / 2 + 4, StaticStorage.scaledResolution.func_78328_b() - 74, 2.0f, new Color(0.15f, 0.15f, 0.15f, this.progress).getRGB());
            GlStateManager.func_179117_G();
            Fonts.fontSFUI35.drawCenteredString(info, (float)(StaticStorage.scaledResolution.func_78326_a() / 2) + 0.1f, StaticStorage.scaledResolution.func_78328_b() - 70, new Color(1.0f, 1.0f, 1.0f, 0.8f * this.progress).getRGB(), false);
            GlStateManager.func_179109_b((float)0.0f, (float)(14.0f + this.progress * 4.0f), (float)0.0f);
        }
    }

    @EventTarget
    public final void onRender3D(@NotNull Render3DEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        if (!((Boolean)this.markValue.get()).booleanValue()) {
            return;
        }
        int n = 0;
        int n2 = ((Number)this.expandLengthValue.get()).intValue() + 1;
        while (n < n2) {
            int i = n++;
            BlockPos blockPos = new BlockPos(MinecraftInstance.mc.field_71439_g.field_70165_t + (double)(MinecraftInstance.mc.field_71439_g.func_174811_aO() == EnumFacing.WEST ? -i : (MinecraftInstance.mc.field_71439_g.func_174811_aO() == EnumFacing.EAST ? i : 0)), MinecraftInstance.mc.field_71439_g.field_70163_u - (MinecraftInstance.mc.field_71439_g.field_70163_u == (double)((int)MinecraftInstance.mc.field_71439_g.field_70163_u) + 0.5 ? 0.0 : 1.0) - (this.shouldGoDown ? 1.0 : 0.0), MinecraftInstance.mc.field_71439_g.field_70161_v + (double)(MinecraftInstance.mc.field_71439_g.func_174811_aO() == EnumFacing.NORTH ? -i : (MinecraftInstance.mc.field_71439_g.func_174811_aO() == EnumFacing.SOUTH ? i : 0)));
            PlaceInfo placeInfo = PlaceInfo.Companion.get(blockPos);
            if (!BlockUtils.isReplaceable(blockPos) || placeInfo == null) continue;
            RenderUtils.drawBlockBox(blockPos, new Color(((Number)this.MarkRedValue.get()).intValue(), ((Number)this.MarkGreenValue.get()).intValue(), ((Number)this.MarkBlueValue.get()).intValue(), ((Number)this.MarkAlphaValue.get()).intValue()), false, true, 1.0f);
            break;
        }
    }

    private final boolean search(BlockPos blockPosition, boolean checks) {
        PlaceRotation placeRotation;
        block91: {
            Rotation rotation;
            Object limitedRotation;
            block89: {
                Rotation rotation2;
                if (!BlockUtils.isReplaceable(blockPosition)) {
                    return false;
                }
                Vec3 eyesPos = new Vec3(MinecraftInstance.mc.field_71439_g.field_70165_t, MinecraftInstance.mc.field_71439_g.func_174813_aQ().field_72338_b + (double)MinecraftInstance.mc.field_71439_g.func_70047_e(), MinecraftInstance.mc.field_71439_g.field_70161_v);
                placeRotation = null;
                EnumFacing[] enumFacingArray = StaticStorage.facings();
                Intrinsics.checkNotNullExpressionValue(enumFacingArray, "facings()");
                Object object = enumFacingArray;
                int n = 0;
                int n2 = ((EnumFacing[])object).length;
                while (n < n2) {
                    EnumFacing side = object[n];
                    ++n;
                    BlockPos neighbor = blockPosition.func_177972_a(side);
                    if (!BlockUtils.canBeClicked(neighbor)) continue;
                    Vec3 dirVec = new Vec3(side.func_176730_m());
                    for (double xSearch = 0.1; xSearch < 0.9; xSearch += 0.1) {
                        for (double ySearch = 0.1; ySearch < 0.9; ySearch += 0.1) {
                            double zSearch = 0.1;
                            while (zSearch < 0.9) {
                                Vec3 posVec = new Vec3((Vec3i)blockPosition).func_72441_c(xSearch, ySearch, zSearch);
                                double distanceSqPosVec = eyesPos.func_72436_e(posVec);
                                Vec3 hitVec = posVec.func_178787_e(new Vec3(dirVec.field_72450_a * 0.5, dirVec.field_72448_b * 0.5, dirVec.field_72449_c * 0.5));
                                if (checks && (eyesPos.func_72436_e(hitVec) > 18.0 || distanceSqPosVec > eyesPos.func_72436_e(posVec.func_178787_e(dirVec)) || MinecraftInstance.mc.field_71441_e.func_147447_a(eyesPos, hitVec, false, true, false) != null)) {
                                    zSearch += 0.1;
                                    continue;
                                }
                                double diffX = hitVec.field_72450_a - eyesPos.field_72450_a;
                                double diffY = hitVec.field_72448_b - eyesPos.field_72448_b;
                                double diffZ = hitVec.field_72449_c - eyesPos.field_72449_c;
                                double diffXZ = MathHelper.func_76133_a((double)(diffX * diffX + diffZ * diffZ));
                                Rotation rotation3 = new Rotation(MathHelper.func_76142_g((float)((float)Math.toDegrees(Math.atan2(diffZ, diffX)) - 90.0f)), MathHelper.func_76142_g((float)((float)(-Math.toDegrees(Math.atan2(diffY, diffXZ))))));
                                Vec3 rotationVector = RotationUtils.getVectorForRotation(rotation3);
                                Vec3 vector = eyesPos.func_72441_c(rotationVector.field_72450_a * (double)4, rotationVector.field_72448_b * (double)4, rotationVector.field_72449_c * (double)4);
                                MovingObjectPosition obj = MinecraftInstance.mc.field_71441_e.func_147447_a(eyesPos, vector, false, false, true);
                                if (obj.field_72313_a != MovingObjectPosition.MovingObjectType.BLOCK || !Intrinsics.areEqual(obj.func_178782_a(), neighbor)) {
                                    zSearch += 0.1;
                                    continue;
                                }
                                if (placeRotation == null || RotationUtils.getRotationDifference(rotation3) < RotationUtils.getRotationDifference(placeRotation.getRotation())) {
                                    Intrinsics.checkNotNullExpressionValue(neighbor, "neighbor");
                                    EnumFacing enumFacing = side.func_176734_d();
                                    Intrinsics.checkNotNullExpressionValue(enumFacing, "side.opposite");
                                    Intrinsics.checkNotNullExpressionValue(hitVec, "hitVec");
                                    placeRotation = new PlaceRotation(new PlaceInfo(neighbor, enumFacing, hitVec), rotation3);
                                }
                                zSearch += 0.1;
                            }
                        }
                    }
                }
                if (placeRotation == null) {
                    return false;
                }
                if (this.rotationsValue.equals("None") || !this.towerStatus) break block89;
                String string = ((String)this.rotationsValue.get()).toLowerCase(Locale.ROOT);
                Intrinsics.checkNotNullExpressionValue(string, "this as java.lang.String).toLowerCase(Locale.ROOT)");
                switch (string) {
                    case "better": {
                        rotation2 = new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + ((Number)this.customYawValue.get()).floatValue(), placeRotation.getRotation().getPitch());
                        break;
                    }
                    case "aac": {
                        rotation2 = new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + (float)(MinecraftInstance.mc.field_71439_g.field_71158_b.field_78900_b < 0.0f ? 0 : 180) + ((Number)this.aacYawValue.get()).floatValue(), placeRotation.getRotation().getPitch());
                        break;
                    }
                    case "normal": {
                        rotation2 = placeRotation.getRotation();
                        break;
                    }
                    case "snap": {
                        rotation2 = placeRotation.getRotation();
                        break;
                    }
                    case "simple": {
                        rotation2 = placeRotation.getRotation();
                        break;
                    }
                    case "grim2": {
                        rotation2 = new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + 180.0f, 83.0f);
                        break;
                    }
                    case "grim": {
                        rotation2 = new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + (float)(MinecraftInstance.mc.field_71439_g.field_71158_b.field_78900_b < 0.0f ? 0 : 180), placeRotation.getRotation().getPitch());
                        break;
                    }
                    case "custom": {
                        rotation2 = new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + ((Number)this.customtowerYawValue.get()).floatValue(), ((Number)this.customtowerPitchValue.get()).floatValue());
                        break;
                    }
                    case "watchdog": {
                        rotation2 = new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + 180.0f, 84.0f);
                        break;
                    }
                    case "lgbt+": {
                        rotation2 = placeRotation.getRotation();
                        break;
                    }
                    default: {
                        return false;
                    }
                }
                this.lockRotation = rotation2;
                if (this.rotationsValue.equals("Snap") || this.rotationsValue.equals("Grim") || this.rotationsValue.equals("Grim2") || this.rotationsValue.equals("LGBT+")) {
                    if (this.silentRotationValue.get().booleanValue()) {
                        Rotation rotation4 = this.lockRotation;
                        Intrinsics.checkNotNull(rotation4);
                        Rotation rotation5 = RotationUtils.limitAngleChange(RotationUtils.serverRotation, rotation4, this.getRotationSpeed());
                        Intrinsics.checkNotNullExpressionValue(rotation5, "limitAngleChange(Rotatio…otation!!, rotationSpeed)");
                        limitedRotation = rotation5;
                        RotationUtils.setTargetRotation((Rotation)limitedRotation, 0);
                    } else {
                        EntityPlayerSP entityPlayerSP = MinecraftInstance.mc.field_71439_g;
                        Rotation rotation6 = this.lockRotation;
                        Intrinsics.checkNotNull(rotation6);
                        entityPlayerSP.field_70177_z = rotation6.getYaw();
                        EntityPlayerSP entityPlayerSP2 = MinecraftInstance.mc.field_71439_g;
                        Rotation rotation7 = this.lockRotation;
                        Intrinsics.checkNotNull(rotation7);
                        entityPlayerSP2.field_70125_A = rotation7.getPitch();
                    }
                } else if (this.silentRotationValue.get().booleanValue()) {
                    Rotation rotation8 = this.lockRotation;
                    Intrinsics.checkNotNull(rotation8);
                    Rotation rotation9 = RotationUtils.limitAngleChange(RotationUtils.serverRotation, rotation8, this.getRotationSpeed());
                    Intrinsics.checkNotNullExpressionValue(rotation9, "limitAngleChange(Rotatio…otation!!, rotationSpeed)");
                    limitedRotation = rotation9;
                    RotationUtils.setTargetRotation((Rotation)limitedRotation, 20);
                } else {
                    EntityPlayerSP entityPlayerSP = MinecraftInstance.mc.field_71439_g;
                    Rotation rotation10 = this.lockRotation;
                    Intrinsics.checkNotNull(rotation10);
                    entityPlayerSP.field_70177_z = rotation10.getYaw();
                    EntityPlayerSP entityPlayerSP3 = MinecraftInstance.mc.field_71439_g;
                    Rotation rotation11 = this.lockRotation;
                    Intrinsics.checkNotNull(rotation11);
                    entityPlayerSP3.field_70125_A = rotation11.getPitch();
                }
            }
            if (this.rotationsValue.equals("None") || this.towerStatus) break block91;
            String string = ((String)this.rotationsValue.get()).toLowerCase(Locale.ROOT);
            Intrinsics.checkNotNullExpressionValue(string, "this as java.lang.String).toLowerCase(Locale.ROOT)");
            switch (string) {
                case "aac": {
                    rotation = new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + (float)(MinecraftInstance.mc.field_71439_g.field_71158_b.field_78900_b < 0.0f ? 0 : 180) + ((Number)this.aacYawValue.get()).floatValue(), placeRotation.getRotation().getPitch());
                    break;
                }
                case "normal": {
                    rotation = placeRotation.getRotation();
                    break;
                }
                case "snap": {
                    rotation = placeRotation.getRotation();
                    break;
                }
                case "grim": {
                    rotation = new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + (float)(MinecraftInstance.mc.field_71439_g.field_71158_b.field_78900_b < 0.0f ? 0 : 180), placeRotation.getRotation().getPitch());
                    break;
                }
                case "grim2": {
                    rotation = new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + 180.0f, 83.0f);
                    break;
                }
                case "custom": {
                    rotation = new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + ((Number)this.customYawValue.get()).floatValue(), ((Number)this.customPitchValue.get()).floatValue());
                    break;
                }
                case "simple": {
                    rotation = placeRotation.getRotation();
                    break;
                }
                case "better": {
                    rotation = new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + ((Number)this.customYawValue.get()).floatValue(), placeRotation.getRotation().getPitch());
                    break;
                }
                case "watchdog": {
                    rotation = new Rotation(MinecraftInstance.mc.field_71439_g.field_70177_z + 180.0f, 84.0f);
                    break;
                }
                case "lgbt+": {
                    rotation = placeRotation.getRotation();
                    break;
                }
                default: {
                    return false;
                }
            }
            this.lockRotation = rotation;
            if (this.rotationsValue.equals("Snap") || this.rotationsValue.equals("Grim") || this.rotationsValue.equals("Grim2") || this.rotationsValue.equals("LGBT+")) {
                if (this.silentRotationValue.get().booleanValue()) {
                    Rotation rotation12 = this.lockRotation;
                    Intrinsics.checkNotNull(rotation12);
                    Rotation rotation13 = RotationUtils.limitAngleChange(RotationUtils.serverRotation, rotation12, this.getRotationSpeed());
                    Intrinsics.checkNotNullExpressionValue(rotation13, "limitAngleChange(Rotatio…otation!!, rotationSpeed)");
                    limitedRotation = rotation13;
                    RotationUtils.setTargetRotation((Rotation)limitedRotation, 0);
                } else {
                    EntityPlayerSP entityPlayerSP = MinecraftInstance.mc.field_71439_g;
                    Rotation rotation14 = this.lockRotation;
                    Intrinsics.checkNotNull(rotation14);
                    entityPlayerSP.field_70177_z = rotation14.getYaw();
                    EntityPlayerSP entityPlayerSP4 = MinecraftInstance.mc.field_71439_g;
                    Rotation rotation15 = this.lockRotation;
                    Intrinsics.checkNotNull(rotation15);
                    entityPlayerSP4.field_70125_A = rotation15.getPitch();
                }
            } else if (this.silentRotationValue.get().booleanValue()) {
                Rotation rotation16 = this.lockRotation;
                Intrinsics.checkNotNull(rotation16);
                Rotation rotation17 = RotationUtils.limitAngleChange(RotationUtils.serverRotation, rotation16, this.getRotationSpeed());
                Intrinsics.checkNotNullExpressionValue(rotation17, "limitAngleChange(Rotatio…otation!!, rotationSpeed)");
                limitedRotation = rotation17;
                RotationUtils.setTargetRotation((Rotation)limitedRotation, 20);
            } else {
                EntityPlayerSP entityPlayerSP = MinecraftInstance.mc.field_71439_g;
                Rotation rotation18 = this.lockRotation;
                Intrinsics.checkNotNull(rotation18);
                entityPlayerSP.field_70177_z = rotation18.getYaw();
                EntityPlayerSP entityPlayerSP5 = MinecraftInstance.mc.field_71439_g;
                Rotation rotation19 = this.lockRotation;
                Intrinsics.checkNotNull(rotation19);
                entityPlayerSP5.field_70125_A = rotation19.getPitch();
            }
        }
        this.targetPlace = placeRotation.getPlaceInfo();
        return true;
    }

    private final int getBlocksAmount() {
        int amount = 0;
        int n = 36;
        while (n < 45) {
            int i;
            ItemStack itemStack;
            if ((itemStack = MinecraftInstance.mc.field_71439_g.field_71069_bz.func_75139_a(i = n++).func_75211_c()) == null || !(itemStack.func_77973_b() instanceof ItemBlock)) continue;
            Item item = itemStack.func_77973_b();
            if (item == null) {
                throw new NullPointerException("null cannot be cast to non-null type net.minecraft.item.ItemBlock");
            }
            Block block = ((ItemBlock)item).field_150939_a;
            Intrinsics.checkNotNullExpressionValue(block, "itemStack.item as ItemBlock).block");
            if (!InventoryUtils.INSTANCE.canPlaceBlock(block)) continue;
            amount += itemStack.field_77994_a;
        }
        return amount;
    }

    private final float getRotationSpeed() {
        return (float)(Math.random() * (double)(((Number)this.maxRotationSpeedValue.get()).intValue() - ((Number)this.minRotationSpeedValue.get()).intValue()) + ((Number)this.minRotationSpeedValue.get()).doubleValue());
    }

    @EventTarget
    public final void onJump(@NotNull JumpEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        if (this.towerStatus) {
            event.cancelEvent();
        }
    }

    private final void renderItemStack(ItemStack stack, int x, int y) {
        GlStateManager.func_179094_E();
        GlStateManager.func_179091_B();
        GlStateManager.func_179147_l();
        GlStateManager.func_179120_a((int)770, (int)771, (int)1, (int)0);
        RenderHelper.func_74520_c();
        MinecraftInstance.mc.func_175599_af().func_180450_b(stack, x, y);
        MinecraftInstance.mc.func_175599_af().func_175030_a(MinecraftInstance.mc.field_71466_p, stack, x, y);
        RenderHelper.func_74518_a();
        GlStateManager.func_179101_C();
        GlStateManager.func_179084_k();
        GlStateManager.func_179121_F();
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    public final boolean getCanSprint() {
        boolean bl;
        if (!MovementUtils.INSTANCE.isMoving()) return false;
        String string = ((String)this.sprintModeValue.get()).toLowerCase(Locale.ROOT);
        Intrinsics.checkNotNullExpressionValue(string, "this as java.lang.String).toLowerCase(Locale.ROOT)");
        switch (string) {
            case "normal": {
                return true;
            }
            case "fakewatchdog": {
                return true;
            }
            case "ground": {
                bl = MinecraftInstance.mc.field_71439_g.field_70122_E;
                break;
            }
            case "air": {
                if (MinecraftInstance.mc.field_71439_g.field_70122_E) return false;
                return true;
            }
            case "fast": {
                return true;
            }
            case "legit": {
                if (!(MinecraftInstance.mc.field_71439_g.field_70125_A < 75.0f)) return false;
                return true;
            }
            default: {
                return false;
            }
        }
        if (!bl) return false;
        return true;
    }

    public static final ListValue access$getRotationsValue$p(Scaffold $this) {
        return $this.rotationsValue;
    }

    public static final Value access$getCustomrotationtwo$p(Scaffold $this) {
        return $this.customrotationtwo;
    }

    public static final ListValue access$getAutoBlockValue$p(Scaffold $this) {
        return $this.autoBlockValue;
    }

    public static final IntegerValue access$getMaxRotationSpeedValue$p(Scaffold $this) {
        return $this.maxRotationSpeedValue;
    }

    public static final IntegerValue access$getMinRotationSpeedValue$p(Scaffold $this) {
        return $this.minRotationSpeedValue;
    }

    public static final IntegerValue access$getMinDelayValue$p(Scaffold $this) {
        return $this.minDelayValue;
    }

    public static final IntegerValue access$getMaxDelayValue$p(Scaffold $this) {
        return $this.maxDelayValue;
    }

    public static final ListValue access$getEagleValue$p(Scaffold $this) {
        return $this.eagleValue;
    }

    public static final ListValue access$getTowerModeValue$p(Scaffold $this) {
        return $this.towerModeValue;
    }

    public static final BoolValue access$getMarkValue$p(Scaffold $this) {
        return $this.markValue;
    }
}
